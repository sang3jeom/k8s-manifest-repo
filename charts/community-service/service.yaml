apiVersion: apps/v1
kind: Deployment
metadata:
  name: community-service
  namespace: dev
  labels: {app: community-service}
spec:
  replicas: 2
  strategy: # 추가
    type: RollingUpdate # 추가
    rollingUpdate: # 추가
      maxUnavailable: 1 # 추가: 기존 Pod 1개 먼저 종료
      maxSurge: 0 # 추가: 새 Pod 추가 없이 교체만
  selector: {matchLabels: {app: community-service}}
  template:
    metadata: {labels: {app: community-service}}
    spec:
      nodeSelector: {"eks.amazonaws.com/nodegroup": "s3j-node-app"}
      containers:
        - name: community-service
          image: 806070027856.dkr.ecr.ap-northeast-2.amazonaws.com/sang3jeom/community-service:53839760fe3e7b02fb1e9f5be3ed7d1ccb8d5ec1
          ports: [{containerPort: 8083}]
          env:
            - name: COMMUNITY_DB_URL
              valueFrom: {configMapKeyRef: {name: sang3jeom-config, key: COMMUNITY_DB_URL}}
            - name: COMMUNITY_DB_USERNAME
              valueFrom: {secretKeyRef: {name: sang3jeom-secrets, key: COMMUNITY_DB_USERNAME}}
            - name: COMMUNITY_DB_PASSWORD
              valueFrom: {secretKeyRef: {name: sang3jeom-secrets, key: COMMUNITY_DB_PASSWORD}}
            - name: USER_SERVICE_URL
              value: http://user-service.dev.svc.cluster.local:8080
          readinessProbe:
            tcpSocket:
              port: 8083
            initialDelaySeconds: 20
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8083
            initialDelaySeconds: 40
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: community-service
  namespace: dev
  labels: {app: community-service}
spec:
  selector: {app: community-service}
  ports: [{port: 8083, targetPort: 8083}]
  type: ClusterIP
  template:
    spec:
      containers:
        - image: 806070027856.dkr.ecr.ap-northeast-2.amazonaws.com/sang3jeom/community-service:53839760fe3e7b02fb1e9f5be3ed7d1ccb8d5ec1
