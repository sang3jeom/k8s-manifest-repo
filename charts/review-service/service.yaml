apiVersion: apps/v1
kind: Deployment
metadata:
  name: review-service
  namespace: dev
  labels: {app: review-service}
spec:
  replicas: 2
  strategy: # 추가
    type: RollingUpdate # 추가
    rollingUpdate: # 추가
      maxUnavailable: 1 # 추가: 기존 Pod 1개 먼저 종료
      maxSurge: 0 # 추가: 새 Pod 추가 없이 교체만
  selector: {matchLabels: {app: review-service}}
  template:
    metadata: {labels: {app: review-service}}
    spec:
      nodeSelector: {"eks.amazonaws.com/nodegroup": "s3j-node-app"}
      containers:
        - name: review-service
          image: 806070027856.dkr.ecr.ap-northeast-2.amazonaws.com/sang3jeom/review-service:27bb5746ffca62e75a2f469eeacc96721e75714a
          ports: [{containerPort: 8084}]
          env:
            - name: RDS_ENDPOINT
              valueFrom: {configMapKeyRef: {name: sang3jeom-config, key: RDS_ENDPOINT}}
            - name: RDS_DB_NAME
              valueFrom: {configMapKeyRef: {name: sang3jeom-config, key: REVIEW_DB_NAME}}
            - name: DATASOURCE_USERNAME
              valueFrom: {secretKeyRef: {name: sang3jeom-secrets, key: REVIEW_DB_USERNAME}}
            - name: DATASOURCE_PASSWORD
              valueFrom: {secretKeyRef: {name: sang3jeom-secrets, key: REVIEW_DB_PASSWORD}}
            - name: S3_BUCKET
              valueFrom: {configMapKeyRef: {name: sang3jeom-config, key: S3_BUCKET}}
            - name: S3_REGION
              valueFrom: {configMapKeyRef: {name: sang3jeom-config, key: S3_REGION}}
            - name: AWS_REGION
              valueFrom: {configMapKeyRef: {name: sang3jeom-config, key: AWS_REGION}}
            - name: AWS_ACCESS_KEY
              valueFrom: {secretKeyRef: {name: sang3jeom-secrets, key: AWS_ACCESS_KEY}}
            - name: AWS_SECRET_KEY
              valueFrom: {secretKeyRef: {name: sang3jeom-secrets, key: AWS_SECRET_KEY}}
            # Feign client base URL for user-service
            - name: SERVICE_URLS_USER_SERVICE
              value: http://user-service.dev.svc.cluster.local:8080
          readinessProbe:
            tcpSocket:
              port: 8084
            initialDelaySeconds: 20
            periodSeconds: 10
          livenessProbe:
            tcpSocket:
              port: 8084
            initialDelaySeconds: 40
            periodSeconds: 20
---
apiVersion: v1
kind: Service
metadata:
  name: review-service
  namespace: dev
  labels: {app: review-service}
spec:
  selector: {app: review-service}
  ports: [{port: 8084, targetPort: 8084}]
  type: ClusterIP
  template:
    spec:
      containers:
        - image: 806070027856.dkr.ecr.ap-northeast-2.amazonaws.com/sang3jeom/review-service:27bb5746ffca62e75a2f469eeacc96721e75714a
